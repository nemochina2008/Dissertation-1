for (i in 1:length(files)) {landmarks <- abind(landmarks, read.pp(files[i]), along=3)}
dimnames(landmarks)[[3]] <- unlist(strsplit(unlist(strsplit(files, path))[seq(from=2, to=244, length.out=122)], "_picked_points.pp"))
rm(path, files)
dim(landmarks)
sum(is.na(landmarks))
39/3
122*26
landmarks[is.na(landmarks[,1,]),1,]
is.na(landmarks[,1,])
is.na(landmarks[is.na(landmarks[,1,]),,])
(landmarks[is.na(landmarks[,1,]),,]
)
length(is.na(landmarks[,1,]))
dim(is.na(landmarks[,1,]))
landmarks[,1,][is.na(landmarks[,1,])]
dim( landmarks[,1,])
landmarks[,1,]
dim(landmarks[,1,])
landmarks[,1,][1,]
landmarks[is.na(landmarks)]
which(is.na(landmarks))
landmarks[1093]
1119-1093
1145-1119
?apply
apply(landmarks, 3, function(x) sum(is.na(x)))
apply(landmarks, 1, function(x) sum(is.na(x)))
apply(landmarks, 1, function(x) sum(is.na(x)))/3
nrow(data)
nrow(complete.cases(data))
data
?stat_ellipse
tree
gdf$Folivore
$Folivore
data$Folivore
ddply(data, .(genus_species), function(x) {x[,"Folivore","Nocturnal","Gouging"]})
19/65
15/65
4/65
?phylomorphospace
setwd("~/Desktop/GitHub/Dissertation/Chapter_5/")
# load custom functions
source("../Chapter_4/R/functions/read.pp.R", chdir = TRUE)
source("R/functions/plot_wireframes.R", chdir = TRUE)
source("R/functions/plotGMPhyloMorphoSpace_axisflip.R", chdir = TRUE)
# read & tidy data
data <- read.csv("data/primate_data.csv") %>%
mutate(Folivore = ifelse(Diet %in% c("Folivore", "Frug-Fol"), 1, 0),
id = paste(Genus, Species, Sex, MuseumID, sep="_"),
genus_species = paste(Genus, Species, sep="_")) %>%
select(1:14, Folivore, id, genus_species) %>%
arrange(id)
# read phylogeny
tree <- read.nexus("../Chapter_2/data/tree.nex")
# read landmarks & add dimnames
path = "data/"
files <- paste(path, list.files(path=path, pattern=".pp"), sep="")
landmarks <- NULL
for (i in 1:length(files)) {landmarks <- abind(landmarks, read.pp(files[i]), along=3)}
dimnames(landmarks)[[3]] <- unlist(strsplit(unlist(strsplit(files, path))[seq(from=2, to=244, length.out=122)], "_picked_points.pp"))
rm(path, files)
# separate data for males and females
data.f <- filter(data, SexDat %in% c("F","B")) %>% select(-Sex, -SexDat)
data.m <- filter(data, SexDat %in% c("M","B")) %>% select(-Sex, -SexDat)
# separate tree for males and females
tree.f <- drop.tip(tree, tree$tip.label[!(tree$tip.label %in% data.f$genus_species)])
tree.m <- drop.tip(tree, tree$tip.label[!(tree$tip.label %in% data.m$genus_species)])
# separate landmarks for males and females
landmarks.f <- landmarks[,,dimnames(landmarks)[[3]]%in%data.f$id]
dimnames(landmarks.f)[[3]] <- data.f$genus_species
landmarks.m <- landmarks[,,dimnames(landmarks)[[3]]%in%data.m$id]
dimnames(landmarks.m)[[3]] <- data.m$genus_species
# estimate missing landmarks for males and females
landmarks.f <- estimate.missing(landmarks.f, method="Reg")
dimnames(landmarks.f)[1:2] <- dimnames(landmarks)[1:2]
landmarks.m <- estimate.missing(landmarks.m, method="Reg")
dimnames(landmarks.m)[1:2] <- dimnames(landmarks)[1:2]
# procrustes alignment for males and females
gpa.f <- gpagen(landmarks.f)
gpa.m <- gpagen(landmarks.m)
# add centroid size to data
data.f$Csize <- gpa.f$Csize
data.m$Csize <- gpa.m$Csize
# create geomorph dataframe for males and females
gdf.f <- geomorph.data.frame(gpa.f, phy=tree.f,
PhysicalAlignment=data.f$PhysicalAlignment,
BodyMass=data.f$BodyMass,
DimorphismIndex=data.f$DimorphismIndex,
Nocturnal=data.f$Nocturnal,
Gouging=data.f$Gouging,
folivore.in=data.f$Folivore)
gdf.m <- geomorph.data.frame(gpa.m, phy=tree.m,
PhysicalAlignment=data.m$PhysicalAlignment,
BodyMass=data.m$BodyMass,
DimorphismIndex=data.m$DimorphismIndex,
Nocturnal=data.m$Nocturnal,
Gouging=data.m$Gouging,
Folivore=data.m$Folivore)
##############################
# EFFECT OF ALIGNMENT METHOD #
##############################
# shape vs alignment method
procD.pgls(coords ~ PhysicalAlignment, phy=phy, data=gdf.f) # p = 0.663
procD.pgls(coords ~ PhysicalAlignment, phy=phy, data=gdf.m) # p = 0.977
#######################
# PHYLOGENETIC SIGNAL #
#######################
# Multivariate Blomberg's K
physignal(landmarks.f, tree.f) # K = 0.47, p = 0.003
physignal(landmarks.m, tree.m) # K = 0.511, p = 0.003
# After controlling for centroid size
single.csize.f <- procD.pgls(coords ~ log(Csize), phy=phy, data=gdf.f) # 0.018 *
single.csize.m <- procD.pgls(coords ~ log(Csize), phy=phy, data=gdf.m) # 0.002 **
physignal(single.csize.f$pgls.residuals, tree.f) # K = 0.43, p = 0.001
physignal(single.csize.m$pgls.residuals, tree.m) # K = 0.41, p = 0.001
# After controlling for all predictors
multi.f <- procD.pgls(coords ~  Gouging + Folivore + Nocturnal + DimorphismIndex + log(Csize), phy=phy, data=gdf.f) # p = 0.026 * **
multi.m <-procD.pgls(coords ~  Gouging + Folivore + Nocturnal + DimorphismIndex+ log(Csize), phy=phy, data=gdf.m) # p = 0.089 *
physignal(multi.f$pgls.residuals, tree.f) # K = 0.33, p = 0.001
physignal(multi.m$pgls.residuals, tree.m) # K = 0.34, p = 0.001
#####################
# INTERACTION TERMS #
#####################
# females
procD.pgls(coords ~ log(Csize) + DimorphismIndex*Nocturnal, phy=phy, data=gdf.f) # p = 0.467
procD.pgls(coords ~ log(Csize) + DimorphismIndex*Folivore, phy=phy, data=gdf.f) # p = 0.413
procD.pgls(coords ~ log(Csize) + DimorphismIndex*Gouging, phy=phy, data=gdf.f) # p = 0.653
#procD.pgls(coords ~ log(Csize) + Gouging*Folivore, phy=phy, data=gdf.f) # fails
procD.pgls(coords ~ log(Csize) + Gouging*Nocturnal, phy=phy, data=gdf.f) # p = 0.581
procD.pgls(coords ~ log(Csize) + Folivore*Nocturnal, phy=phy, data=gdf.f) # p = 0.131
# males
procD.pgls(coords ~ log(Csize) + DimorphismIndex*Nocturnal, phy=phy, data=gdf.m) # p = 0.322
procD.pgls(coords ~ log(Csize) + DimorphismIndex*Folivore, phy=phy, data=gdf.m) # p = 0.814
procD.pgls(coords ~ log(Csize) + DimorphismIndex*Gouging, phy=phy, data=gdf.m) # p = 0.705
#procD.pgls(coords ~ log(Csize) + Gouging*Folivore, phy=phy, data=gdf.m) # fails
procD.pgls(coords ~ log(Csize) + Gouging*Nocturnal, phy=phy, data=gdf.m) # p = 0.864
procD.pgls(coords ~ log(Csize) + Folivore*Nocturnal, phy=phy, data=gdf.m) # p = 0.437
##############################
# VARIANCE INFLATION FACTORS #
##############################
# females
1/(1 - summary(lm(log(Csize) ~ DimorphismIndex + Gouging + Folivore + Nocturnal, data=data.f))$r.squared) # 1.84
1/(1 - summary(lm(DimorphismIndex ~ log(Csize) + Gouging + Folivore + Nocturnal, data=data.f))$r.squared) # 1.48
1/(1 - summary(lm(Gouging ~ log(Csize) + DimorphismIndex + Folivore + Nocturnal, data=data.f))$r.squared) # 1.08
1/(1 - summary(lm(Folivore ~ log(Csize) + DimorphismIndex + Gouging + Nocturnal, data=data.f))$r.squared) # 1.1
1/(1 - summary(lm(Nocturnal ~ log(Csize) + DimorphismIndex + Folivore + Gouging, data=data.f))$r.squared) # 1.47
# males
1/(1 - summary(lm(log(Csize) ~ DimorphismIndex + Gouging + Folivore + Nocturnal, data=data.m))$r.squared) # 2.16
1/(1 - summary(lm(DimorphismIndex ~ log(Csize) + Gouging + Folivore + Nocturnal, data=data.m))$r.squared) # 1.72
1/(1 - summary(lm(Gouging ~ log(Csize) + DimorphismIndex + Folivore + Nocturnal, data=data.m))$r.squared) # 1.09
1/(1 - summary(lm(Folivore ~ log(Csize) + DimorphismIndex + Gouging + Nocturnal, data=data.m))$r.squared) # 1.12
1/(1 - summary(lm(Nocturnal ~ log(Csize) + DimorphismIndex + Folivore + Gouging, data=data.m))$r.squared) # 1.46
######################
# HYPOTHESIS TESTING #
######################
# single variables: females
single.noc.f <- procD.pgls(coords ~ log(Csize) + Nocturnal, phy=phy, data=gdf.f) # 0.292
single.folin.f <- procD.pgls(coords ~ log(Csize) + Folivore, phy=phy, data=gdf.f) # 0.036 *
single.gouge.f <- procD.pgls(coords ~ log(Csize) + Gouging, phy=phy, data=gdf.f) # 0.378
single.di.f <- procD.pgls(coords ~ log(Csize) + DimorphismIndex, phy=phy, data=gdf.f) # 0.001 **
# single variables: males
single.noc.m <- procD.pgls(coords ~ log(Csize) + Nocturnal, phy=phy, data=gdf.m) # 0.314
single.folin.m <- procD.pgls(coords ~ log(Csize) + Folivore, phy=phy, data=gdf.m) # 0.039 *
single.gouge.m <- procD.pgls(coords ~ log(Csize) + Gouging, phy=phy, data=gdf.m) # 0.746
single.di.m <- procD.pgls(coords ~ log(Csize) + DimorphismIndex, phy=phy, data=gdf.m) # 0.001 **
# full model: females
multi.csize.f <- procD.pgls(coords ~ DimorphismIndex + Gouging + Folivore + Nocturnal + log(Csize), phy=phy, data=gdf.f) # p = 0.026 *
multi.noc.f <- procD.pgls(coords ~ log(Csize) + DimorphismIndex + Gouging + Folivore + Nocturnal, phy=phy, data=gdf.f) # p = 0.241
multi.folin.f <- procD.pgls(coords ~ log(Csize) + DimorphismIndex + Gouging + Nocturnal + Folivore, phy=phy, data=gdf.f) # p = 0.068 .
multi.gouge.f <- procD.pgls(coords ~ log(Csize) + DimorphismIndex + Folivore + Nocturnal + Gouging, phy=phy, data=gdf.f) # p = 0.268
multi.di.f <- procD.pgls(coords ~ log(Csize) + Gouging + Folivore + Nocturnal + DimorphismIndex, phy=phy, data=gdf.f) # p = 0.001 **
# full model: males
multi.csize.m <- procD.pgls(coords ~ DimorphismIndex + Gouging + Folivore + Nocturnal + log(Csize), phy=phy, data=gdf.m) # p = 0.089 .
multi.noc.m <- procD.pgls(coords ~ log(Csize) + DimorphismIndex + Gouging + Folivore + Nocturnal, phy=phy, data=gdf.m) # p = 0.204
multi.folin.m <- procD.pgls(coords ~ log(Csize) + DimorphismIndex + Gouging + Nocturnal + Folivore, phy=phy, data=gdf.m) # p = 0.055 .
multi.gouge.m <- procD.pgls(coords ~ log(Csize) + DimorphismIndex + Folivore + Nocturnal + Gouging, phy=phy, data=gdf.m) # p = 0.676
multi.di.m <- procD.pgls(coords ~ log(Csize) + Gouging + Folivore + Nocturnal + DimorphismIndex, phy=phy, data=gdf.m) # p = 0.001 **
gdf.f <- geomorph.data.frame(gpa.f, phy=tree.f,
PhysicalAlignment=data.f$PhysicalAlignment,
BodyMass=data.f$BodyMass,
DimorphismIndex=data.f$DimorphismIndex,
Nocturnal=data.f$Nocturnal,
Gouging=data.f$Gouging,
Folivore=data.f$Folivore)
single.folin.f <- procD.pgls(coords ~ log(Csize) + Folivore, phy=phy, data=gdf.f) # 0.036 *
multi.csize.f <- procD.pgls(coords ~ DimorphismIndex + Gouging + Folivore + Nocturnal + log(Csize), phy=phy, data=gdf.f) # p = 0.026 *
multi.noc.f <- procD.pgls(coords ~ log(Csize) + DimorphismIndex + Gouging + Folivore + Nocturnal, phy=phy, data=gdf.f) # p = 0.241
multi.folin.f <- procD.pgls(coords ~ log(Csize) + DimorphismIndex + Gouging + Nocturnal + Folivore, phy=phy, data=gdf.f) # p = 0.068 .
multi.gouge.f <- procD.pgls(coords ~ log(Csize) + DimorphismIndex + Folivore + Nocturnal + Gouging, phy=phy, data=gdf.f) # p = 0.268
multi.di.f <- procD.pgls(coords ~ log(Csize) + Gouging + Folivore + Nocturnal + DimorphismIndex, phy=phy, data=gdf.f) # p = 0.001 **
wireframe <- read.csv("../Chapter_4/data/wireframe.csv", header=FALSE)
lines.col <- mapvalues(wireframe[,1], unique(wireframe[,1]), c("red","green","blue","purple","goldenrod"))
layout3d(matrix(1:2, 1, 2), sharedMouse = TRUE)
plot.procD(multi.noc.f, wireframe[,2:3], value=0, points.col="black", lines.col="black",
legend=c("Non-nocturnal","Nocturnal"), legend.pos="topright", legend.col=c("black","skyblue"))
plot.procD(multi.noc.f, wireframe[,2:3], value=1, points.col="skyblue", lines.col="skyblue", add=TRUE)
plot.procD(multi.noc.m, wireframe[,2:3], value=0, points.col="black", lines.col="black")
plot.procD(multi.noc.m, wireframe[,2:3], value=1, points.col="skyblue", lines.col="skyblue", add=TRUE)
layout3d(matrix(1:2, 1, 2), sharedMouse = TRUE)
plot.procD(multi.gouge.f, wireframe[,2:3], value=0, points.col="black", lines.col="black",
legend=c("Non-gouging","Gouging"), legend.pos="topright", legend.col=c("black","pink"))
plot.procD(multi.gouge.f, wireframe[,2:3], value=1, points.col="pink", lines.col="pink", add=TRUE)
plot.procD(multi.gouge.m, wireframe[,2:3], value=0, points.col="black", lines.col="black")
plot.procD(multi.gouge.m, wireframe[,2:3], value=1, points.col="pink", lines.col="pink", add=TRUE)
?estimate.missing
estimate.missing
heesy <- read.csv("https://raw.githubusercontent.com/rgriff23/Heesy_2008_reanalysis/master/data/HeesyData.csv", header=TRUE, row.names=1)
head(heesy)
# log centroid size vs log body mass
ggplot(heesy, aes(x=BrainVolume, y=Convergence, fill=GROUP, color=GROUP)) +
geom_point() +
stat_ellipse(geom = "polygon", alpha=0.1) +
ylab("Convergence angle") +
xlab("Brain volume") +
theme(axis.text.x=element_text(size = 12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(margin=margin(20,0,0,0), size = 14, face = 2),
axis.title.y=element_text(margin=margin(0,20,0,0), size = 14, face = 2),
legend.title=element_text(size=14),
legend.text=element_text(size=12),
strip.text=element_text(size=14))
ggplot(heesy, aes(x=BrainVolume, y=Convergence, fill=Noccode, color=Noccode)) +
geom_point() +
stat_ellipse(geom = "polygon", alpha=0.1) +
ylab("Convergence angle") +
xlab("Brain volume") +
theme(axis.text.x=element_text(size = 12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(margin=margin(20,0,0,0), size = 14, face = 2),
axis.title.y=element_text(margin=margin(0,20,0,0), size = 14, face = 2),
legend.title=element_text(size=14),
legend.text=element_text(size=12),
strip.text=element_text(size=14))
# log centroid size vs log body mass
ggplot(heesy, aes(x=BrainVolume, y=Convergence, fill=GROUP, color=Noccode)) +
geom_point() +
stat_ellipse(geom = "polygon", alpha=0.1) +
ylab("Convergence angle") +
xlab("Brain volume") +
theme(axis.text.x=element_text(size = 12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(margin=margin(20,0,0,0), size = 14, face = 2),
axis.title.y=element_text(margin=margin(0,20,0,0), size = 14, face = 2),
legend.title=element_text(size=14),
legend.text=element_text(size=12),
strip.text=element_text(size=14))
# log centroid size vs log body mass
ggplot(heesy, aes(x=BrainVolume, y=Convergence, fill=GROUP, color=GROUP)) +
geom_point(aes(color=Noccode)) +
stat_ellipse(geom = "polygon", alpha=0.1) +
ylab("Convergence angle") +
xlab("Brain volume") +
theme(axis.text.x=element_text(size = 12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(margin=margin(20,0,0,0), size = 14, face = 2),
axis.title.y=element_text(margin=margin(0,20,0,0), size = 14, face = 2),
legend.title=element_text(size=14),
legend.text=element_text(size=12),
strip.text=element_text(size=14))
# log centroid size vs log body mass
ggplot(heesy, aes(x=BrainVolume, y=Convergence, fill=GROUP, color=GROUP)) +
geom_point(aes(color=as.factor(Noccode))) +
stat_ellipse(geom = "polygon", alpha=0.1) +
ylab("Convergence angle") +
xlab("Brain volume") +
theme(axis.text.x=element_text(size = 12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(margin=margin(20,0,0,0), size = 14, face = 2),
axis.title.y=element_text(margin=margin(0,20,0,0), size = 14, face = 2),
legend.title=element_text(size=14),
legend.text=element_text(size=12),
strip.text=element_text(size=14))
head(heesy)
ggplot(heesy, aes(x=BrainVolume, y=Convergence, fill=ORDER, color=ORDER)) +
geom_point() +
stat_ellipse(geom = "polygon", alpha=0.1) +
ylab("Convergence angle") +
xlab("Brain volume") +
theme(axis.text.x=element_text(size = 12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(margin=margin(20,0,0,0), size = 14, face = 2),
axis.title.y=element_text(margin=margin(0,20,0,0), size = 14, face = 2),
legend.title=element_text(size=14),
legend.text=element_text(size=12),
strip.text=element_text(size=14))
?stat_ellipse
ggplot(heesy, aes(x=BrainVolume, y=Convergence, fill=ORDER, color=ORDER)) +
geom_point() +
stat_ellipse(fill=ORDER, geom = "polygon", alpha=0.1) +
ylab("Convergence angle") +
xlab("Brain volume") +
theme(axis.text.x=element_text(size = 12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(margin=margin(20,0,0,0), size = 14, face = 2),
axis.title.y=element_text(margin=margin(0,20,0,0), size = 14, face = 2),
legend.title=element_text(size=14),
legend.text=element_text(size=12),
strip.text=element_text(size=14))
# log centroid size vs log body mass
ggplot(heesy, aes(x=BrainVolume, y=Convergence, group=ORDER, fill=Noccode, color=Noccode)) +
geom_point() +
stat_ellipse(geom = "polygon", alpha=0.1) +
ylab("Convergence angle") +
xlab("Brain volume") +
theme(axis.text.x=element_text(size = 12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(margin=margin(20,0,0,0), size = 14, face = 2),
axis.title.y=element_text(margin=margin(0,20,0,0), size = 14, face = 2),
legend.title=element_text(size=14),
legend.text=element_text(size=12),
strip.text=element_text(size=14))
ggplot(heesy, aes(x=BrainVolume, y=Convergence, group=ORDER, fill=Noccode)) +
geom_point() +
stat_ellipse(geom = "polygon", alpha=0.1) +
ylab("Convergence angle") +
xlab("Brain volume") +
theme(axis.text.x=element_text(size = 12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(margin=margin(20,0,0,0), size = 14, face = 2),
axis.title.y=element_text(margin=margin(0,20,0,0), size = 14, face = 2),
legend.title=element_text(size=14),
legend.text=element_text(size=12),
strip.text=element_text(size=14))
# log centroid size vs log body mass
ggplot(heesy, aes(x=BrainVolume, y=Convergence, group=ORDER, color=Noccode)) +
geom_point() +
stat_ellipse(geom = "polygon", alpha=0.1) +
ylab("Convergence angle") +
xlab("Brain volume") +
theme(axis.text.x=element_text(size = 12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(margin=margin(20,0,0,0), size = 14, face = 2),
axis.title.y=element_text(margin=margin(0,20,0,0), size = 14, face = 2),
legend.title=element_text(size=14),
legend.text=element_text(size=12),
strip.text=element_text(size=14))
mean(heesy[heesy$Noccode==1,"Convergence"])
mean(heesy[heesy$Noccode==1,"Convergence"], na.rm=T)
mean(heesy[heesy$Noccode==0,"Convergence"], na.rm=T)
summary(lm(Convergence~Noccode,data=heesy))
heesy.model.1 <- manova(cbind(Convergence, Frontition, Verticality) ~ Noccode*Fauncode*Arbcode, data=data)
summary.manova(heesy.model.1, test="Wilks")
heesy.model.1 <- manova(cbind(Convergence, Frontition, Verticality) ~ Noccode*Fauncode*Arbcode, data=heesy)
summary.manova(heesy.model.1, test="Wilks")
heesy.model
heesy.model1
heesy.model.1
data.eu1 <- heesy[!(heesy$ORDER%in%c("Didelphimorphia","Diprotodontia")),]
data.eu1 <- data.eu1[heesy$GROUP != "Anthropoidea",]
heesy.model.2 <- manova(cbind(Convergence, Frontition, Verticality) ~ Noccode*Fauncode*Arbcode, heesy=data.eu1)
summary.manova(heesy.model.2, test="Wilks")
head(heesy)
data.eu1 <- heesy[!(heesy$ORDER%in%c("Didelphimorphia","Diprotodontia")),]
data.eu1 <- data.eu1[data.eu1$GROUP != "Anthropoidea",]
heesy.model.2 <- manova(cbind(Convergence, Frontition, Verticality) ~ Noccode*Fauncode*Arbcode, heesy=data.eu1)
summary.manova(heesy.model.2, test="Wilks")
data <- read.csv("https://raw.githubusercontent.com/rgriff23/Heesy_2008_reanalysis/master/data/HeesyData.csv", header=TRUE, row.names=1)
# MANOVA/ANOVA (all taxa)
heesy.model.1 <- manova(cbind(Convergence, Frontition, Verticality) ~ Noccode*Fauncode*Arbcode, data=data)
summary.manova(heesy.model.1, test="Wilks")
summary.aov(heesy.model.1)
data.eu1 <- data[!(data$ORDER%in%c("Didelphimorphia","Diprotodontia")),]
data.eu1 <- data.eu1[data.eu1$GROUP != "Anthropoidea",]
heesy.model.2 <- manova(cbind(Convergence, Frontition, Verticality) ~ Noccode*Fauncode*Arbcode, data=data.eu1)
summary.manova(heesy.model.2, test="Wilks")
summary.aov(heesy.model.2)
# knitr settings
knitr::opts_chunk$set(fig.path = "assets/Rfigs/", message=FALSE, comment="> ", fig.align='center')
knitr::opts_knit$set(base.dir = "/Users/nunnlab/Desktop/GitHub/rgriff23.github.io/", base.url = "/")
# load packages
library(ape)
library(geiger)
library(geomorph)
# make simulation-based p-values reproducible
set.seed(23)
data.eu2 <- data[!(data$ORDER%in%c("Didelphimorphia","Diprotodontia","Primates")),]
heesy.model.3 <- manova(cbind(Convergence, Frontition, Verticality) ~ Noccode*Fauncode*Arbcode, data=data.eu2)
summary.manova(heesy.model.3, test="Wilks")
summary.aov(heesy.model.3)
summary.aov(heesy.model.2)
# load package
library(ape)
# import phylogenetic tree
tree <- read.nexus("https://raw.githubusercontent.com/rgriff23/Heesy_2008_reanalysis/master/data/HeesyTree.nexus")
# arbitrarily resolve polytomies
tree <- multi2di(tree)
# load package
library(geiger)
# define multidimensional response variable
angles <- data[,c("Convergence","Frontition","Verticality")]
# define univariate predictors (must be factors)
nocturnal <- as.factor(setNames(data$Noccode, row.names(data)))
insectivore <- as.factor(setNames(data$Fauncode, row.names(data)))
arboreal <- as.factor(setNames(data$Arbcode, row.names(data)))
# models
aov.phylo(angles ~ nocturnal, phy=tree)
aov.phylo(angles ~ insectivore, phy=tree)
aov.phylo(angles ~ arboreal, phy=tree)
library("geomorph")
# subset data (no missing values allowed)
data.cc <- data[,c("Convergence","Frontition","Verticality","Noccode","Fauncode","Arbcode","GROUP","ORDER")]
data.cc <- data.cc[complete.cases(data.cc),]
angles2 <- data.cc[,1:3]
vars <- data.cc[,4:6]
droptax <- row.names(data)[!(row.names(data) %in% row.names(data.cc))]
tree2 <- multi2di(drop.tip(tree, droptax))
# create new 'geomorph data frame' with response, predictors, and tree
df <- geomorph.data.frame(angles2, vars, tree2)
# multivariate MANOVA with procD.pgls in geomorph
procD.pgls(angles2 ~ Noccode * Fauncode * Arbcode, phy=tree2, data=df, print.progress=F)
summary.aov(heesy.model.2)
library("geomorph")
# subset data (no missing values allowed)
data.cc <- data[,c("Convergence","Frontition","Verticality","Noccode","Fauncode","Arbcode","GROUP","ORDER")]
data.cc <- data.cc[complete.cases(data.cc),]
angles2 <- data.cc[,1:3]
vars <- data.cc[,4:6]
droptax <- row.names(data)[!(row.names(data) %in% row.names(data.cc))]
tree2 <- multi2di(drop.tip(tree, droptax))
# create new 'geomorph data frame' with response, predictors, and tree
df <- geomorph.data.frame(angles2, vars, tree2)
# multivariate MANOVA with procD.pgls in geomorph
procD.pgls(angles2 ~ Noccode * Fauncode * Arbcode, phy=tree2, data=df, print.progress=F)
data.cc.eu1 <- data.cc[!(data.cc$ORDER%in%c("Didelphimorphia","Diprotodontia")),]
data.cc.eu1 <- data.cc.eu1[data.cc.eu1$GROUP != "Anthropoidea",]
angles3 <- data.cc.eu1[,1:3]
vars3 <- data.cc.eu1[,4:6]
tree3 <- drop.tip(tree2, setdiff(tree2$tip.label,row.names(data.cc.eu1)))
df3 <- geomorph.data.frame(angles3, vars3, tree3)
procD.pgls(angles3 ~ Noccode * Fauncode * Arbcode, phy=tree3, data=df3, print.progress=F)
# drop marsupials and primates, then rerun phylogenetic MANOVA
data.cc.eu2 <- data.cc.eu1[data.cc.eu1$ORDER != "Primates",]
angles4 <- data.cc.eu2[,1:3]
vars4 <- data.cc.eu2[,4:6]
tree4 <- drop.tip(tree3, setdiff(tree3$tip.label,row.names(data.cc.eu2)))
df4 <- geomorph.data.frame(angles4, vars4, tree4)
procD.pgls(angles4 ~ Noccode * Fauncode * Arbcode, phy=tree4, data=df4, print.progress=F)
mod.pgls = procD.pgls(angles2 ~ Noccode * Fauncode * Arbcode, phy=tree2, data=df, print.progress=F)
mod.pgls$pgls.coefficients
mod.ls = procD.lm(angles2 ~ Noccode * Fauncode * Arbcode, data=df, print.progress=F)
mod.ls$coefficients
mod.pgls2=procD.pgls(angles3 ~ Noccode * Fauncode * Arbcode, phy=tree3, data=df3, print.progress=F)
mod.pgls2$coefficients
mod.pgls2$pgls.coefficients
mod.pgls3=procD.pgls(angles4 ~ Noccode * Fauncode * Arbcode, phy=tree4, data=df4, print.progress=F)
mod.pgls3$pgls.coefficients
mod.lm3=procD.lm(angles4 ~ Noccode * Fauncode * Arbcode,  data=df4, print.progress=F)
mod.lm3$coefficients
mod.lm2=procD.lm(angles3 ~ Noccode * Fauncode * Arbcode, data=df3, print.progress=F)
mod.lm2$coefficients
mod.pgls$pgls.coefficients
table(heesy$ORDER, heesy$Convergence)
table(heesy$ORDER*heesy$Convergence)
ddply(heesy, .(ORDER), function(x) mean(x$Convergence))
table(heesy$ORDER, heesy$Noccode)
table(heesy$ORDER, heesy$Noccode, heesy$Fauncode)
table(heesy$ORDER, heesy$Fauncode)
table(heesy$ORDER, heesy$Noccode)
fivenum(ddply(heesy, .(ORDER), function(x) mean(x$Convergence))$V1)
ddply(heesy, .(ORDER), function(x) mean(x$Convergence))
boxplot(Convergence~Noccode,data=heesy[heesy$ORDER=="Primates",])
# log centroid size vs log body mass
ggplot(heesy[heesy$ORDER=="Primates",], aes(x=BrainVolume, y=Convergence, group=ORDER, color=Noccode)) +
geom_point() +
stat_ellipse(geom = "polygon", alpha=0.1) +
ylab("Convergence angle") +
xlab("Brain volume") +
theme(axis.text.x=element_text(size = 12),
axis.text.y=element_text(size=12),
axis.title.x=element_text(margin=margin(20,0,0,0), size = 14, face = 2),
axis.title.y=element_text(margin=margin(0,20,0,0), size = 14, face = 2),
legend.title=element_text(size=14),
legend.text=element_text(size=12),
strip.text=element_text(size=14))
layout3d(matrix(1:4, 2, 2, byrow=TRUE), sharedMouse = TRUE)
plot.procD(multi.csize.f, wireframe[,2:3], value=log(min(gdf.f$Csize)))
plot.procD(multi.csize.f, wireframe[,2:3], value=log(max(gdf.f$Csize)))
plot.procD(multi.csize.m, wireframe[,2:3], value=log(min(gdf.m$Csize)))
plot.procD(multi.csize.m, wireframe[,2:3], value=log(max(gdf.m$Csize)))
snapshot3d(filename = '~/Dropbox/Dissertation/Dissertation chapters/Chapter 5 - Correlates of skull shape/Figures/Figure 5.6 - centroid size wireframes.png', fmt = 'png')
layout3d(matrix(1:4, 2, 2, byrow=TRUE), sharedMouse = TRUE)
plot.procD(multi.csize.f, wireframe[,2:3], value=log(min(gdf.f$Csize)))
plot.procD(multi.csize.f, wireframe[,2:3], value=log(max(gdf.f$Csize)))
plot.procD(multi.csize.m, wireframe[,2:3], value=log(min(gdf.m$Csize)))
plot.procD(multi.csize.m, wireframe[,2:3], value=log(max(gdf.m$Csize)))
snapshot3d(filename = '~/Dropbox/Dissertation/Dissertation chapters/Chapter 5 - Correlates of skull shape/Figures/Figure 5.6 - centroid size wireframes.png', fmt = 'png')
names(landmarks)
dimnames(landmarks)
layout3d(matrix(1:4, 2, 2, byrow=TRUE), sharedMouse = TRUE)
plot.procD(multi.csize.f, wireframe[,2:3], value=log(min(gdf.f$Csize)))
plot.procD(multi.csize.f, wireframe[,2:3], value=log(max(gdf.f$Csize)))
plot.procD(multi.csize.m, wireframe[,2:3], value=log(min(gdf.m$Csize)))
plot.procD(multi.csize.m, wireframe[,2:3], value=log(max(gdf.m$Csize)))
snapshot3d(filename = '~/Dropbox/Dissertation/Dissertation chapters/Chapter 5 - Correlates of skull shape/Figures/Figure 5.6 - centroid size wireframes.png', fmt = 'png')
layout3d(matrix(1:2, 1, 2), sharedMouse = TRUE)
plot.procD(multi.folin.f, wireframe[,2:3], value=0, points.col="black", lines.col="black",
legend=c("Non-folivorous","Folivorous"), legend.pos="topright", legend.col=c("black","palegreen"))
plot.procD(multi.folin.f, wireframe[,2:3], value=1, points.col="palegreen", lines.col="palegreen", add=TRUE)
plot.procD(multi.folin.m, wireframe[,2:3], value=0, points.col="black", lines.col="black")
plot.procD(multi.folin.m, wireframe[,2:3], value=1, points.col="palegreen", lines.col="palegreen", add=TRUE)
str(gdf.m)
gdf.f[,"2"]
gdf.f[,2]
gdf.f[1,]
gdf.f[1,,]
?system
summary(lm(log(Csize) ~ Folivore, data=data.f))
summary(lm(log(Csize) ~ Nocturnal, data=data.f))
summary(lm(log(Csize) ~ DimorphismIndex, data=data.f))
summary(lm(log(Csize) ~ Gouging, data=data.f))
summary(lm(log(Csize) ~ Gouging, data=data.f))
